<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.liguapi.admin.mapper.VideoMapper">
    <resultMap id="BaseResultMap" type="top.liguapi.admin.entity.pojo.Video">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="intro" jdbcType="VARCHAR" property="intro"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">

            id, title, intro, uid, cover, link, category_id, created_at, updated_at, deleted_at

    </sql>
    <select id="selectByExample" parameterType="top.liguapi.admin.entity.pojo.VideoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from video
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from video
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

            delete from video
            where id = #{id,jdbcType=INTEGER}

    </delete>
    <delete id="deleteByExample" parameterType="top.liguapi.admin.entity.pojo.VideoExample">
        delete from video
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="top.liguapi.admin.entity.pojo.Video">

            insert into video (id, title, intro,
              uid, cover, link, category_id,
              created_at, updated_at, deleted_at
              )
            values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR},
              #{uid,jdbcType=INTEGER}, #{cover,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER},
              #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}
              )

    </insert>
    <insert id="insertSelective" parameterType="top.liguapi.admin.entity.pojo.Video">
        insert into video
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="intro != null">
                intro,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="cover != null">
                cover,
            </if>
            <if test="link != null">
                link,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="deletedAt != null">
                deleted_at,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                #{intro,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="cover != null">
                #{cover,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                #{link,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                #{deletedAt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="top.liguapi.admin.entity.pojo.VideoExample" resultType="java.lang.Long">
        select count(*) from video
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update video
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.intro != null">
                intro = #{record.intro,jdbcType=VARCHAR},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.cover != null">
                cover = #{record.cover,jdbcType=VARCHAR},
            </if>
            <if test="record.link != null">
                link = #{record.link,jdbcType=VARCHAR},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
            <if test="record.createdAt != null">
                created_at = #{record.createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updatedAt != null">
                updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="record.deletedAt != null">
                deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update video
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        intro = #{record.intro,jdbcType=VARCHAR},
        uid = #{record.uid,jdbcType=INTEGER},
        cover = #{record.cover,jdbcType=VARCHAR},
        link = #{record.link,jdbcType=VARCHAR},
        category_id = #{record.categoryId,jdbcType=INTEGER},
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="top.liguapi.admin.entity.pojo.Video">
        update video
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="intro != null">
                intro = #{intro,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="cover != null">
                cover = #{cover,jdbcType=VARCHAR},
            </if>
            <if test="link != null">
                link = #{link,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deletedAt != null">
                deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="top.liguapi.admin.entity.pojo.Video">

            update video
            set title = #{title,jdbcType=VARCHAR},
              intro = #{intro,jdbcType=VARCHAR},
              uid = #{uid,jdbcType=INTEGER},
              cover = #{cover,jdbcType=VARCHAR},
              link = #{link,jdbcType=VARCHAR},
              category_id = #{categoryId,jdbcType=INTEGER},
              created_at = #{createdAt,jdbcType=TIMESTAMP},
              updated_at = #{updatedAt,jdbcType=TIMESTAMP},
              deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
            where id = #{id,jdbcType=INTEGER}

    </update>

    <resultMap id="videoQueryMap" type="top.liguapi.admin.entity.dto.VideoItemsDTO">
        <id column="v_id" property="id"/>
        <result column="v_title" property="title"/>
        <result column="v_cover" property="cover"/>
        <result column="v_intro" property="intro"/>
        <result column="v_uid" property="uid"/>
        <result column="v_link" property="link"/>
        <result column="v_category_id" property="categoryId"/>
        <result column="c_name" property="category"/>
        <collection property="uploader" ofType="top.liguapi.admin.entity.dto.UserDTO">
            <id column="up_id" property="id"/>
            <result column="up_name" property="name"/>
            <result column="up_avatar" property="avatar"/>
            <result column="up_intro" property="intro"/>
            <result column="up_phone" property="phone"/>
            <result column="up_phone_linked" property="phoneLinked"/>
            <result column="up_openid" property="openid"/>
            <result column="up_wechat_linked" property="wechatLinked"/>
        </collection>
    </resultMap>
    <select id="query" resultMap="videoQueryMap">

        SELECT
            v.id AS v_id,
            v.title AS v_title,
            v.cover AS v_cover,
            v.intro AS v_intro,
            v.uid AS v_uid,
            v.link AS v_link,
            v.category_id AS v_category_id,
            c.NAME AS c_name,
            up.id AS up_id,
            up.NAME AS up_name,
            up.avatar AS up_avatar,
            up.intro AS up_intro,
            up.phone AS up_phone,
            up.phone_linked AS up_phone_linked,
            up.openid AS up_openid,
            up.wechat_linked AS up_wechat_linked
        FROM
            video AS v
            LEFT JOIN category AS c ON v.category_id = c.id
            LEFT JOIN user AS up ON v.uid = up.id
        <where>
            <if test="id != null">
                and v.id = #{id}
            </if>
            <if test="name != null">
                and v.title like concat('%', #{name}, '%')
            </if>
            <if test="categoryId != null">
                and v.category_id = #{categoryId}
            </if>
            <if test="up != null">
                and up.name = #{up}
            </if>
        </where>
    </select>
</mapper>